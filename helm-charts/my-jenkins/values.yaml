# Default values for my-jenkins.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1



jenkins:
  namespaceOverride: ci
  controller:
    serviceType: ClusterIP
    # switch to ClusterIP if i will use ingress controller/ LoadBalancer
    adminPassword: z1z2z3z4z5
    jenkinsUriPrefix: "/ci"
    installPlugins:
    - kubernetes:4029.v5712230ccb_f8
    - workflow-aggregator:596.v8c21c963d92d
    - git:5.2.0
    - configuration-as-code:1670.v564dc8b_982d0

    additionalPlugins: ["pipeline-stage-view:2.33", "job-dsl:1.84",]

    JCasC:
      configScripts:
        welcome-message: |
          jenkins:
            systemMessage: testing JCasC and system message 
        example-job: |
          jobs:
            - script: >
                multibranchPipelineJob('jenkins-in-kubernetes-example-pipeline') {
                  branchSources {
                    git {
                      id('jenkins-in-kubernetes-example-pipeline')  
                      remote('https://github.com/arieluchka/aks-cluster-project-app')
                    }
                  }
                }
        dockerhub-credentials: |
          credentials:
            system:
              domainCredentials:
                - credentials:
                  - usernamePassword:
                      scope: GLOBAL
                      id: dockerhub
                      username: "arieluchka"
                      password: "AriK2001_"
                      description: "Username/Password Credentials for some-user"


      


          
        # pipeline-test: |
        #   jenkins:
        #     multibranchPipelineJob('test'){
        #         branchSources {
        #             branchSource {
        #                 source {
        #                     git {
        #                         id = 'testdeez'
        #                         remote('https://github.com/arieluchka/aks-cluster-project')
        #                         credentialsId('')

        #                         traits {
        #                             gitBranchDiscovery()
        #                             gitTagDiscovery()
        #                         }
        #                     }
        #                 }
        #                 strategy {
        #                     defaultBranchPropertyStrategy {
        #                         props {
        #                             noTriggerBranchProperty()
        #                         }
        #                     }
        #                 }
        #             }
        #         }
        #         displayName('Add your job name here')
        #         orphanedItemStrategy { discardOldItems { numToKeep(-1) } }
        #     }
  # agent:
  #   resources:
  #     limits:
  #       cpu: "1024m"
  #       memory: "1024Mi"





















image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
